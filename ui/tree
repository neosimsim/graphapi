#!/bin/sh
# Tcl ignores the next line -*- tcl -*- \
exec wish "$0" -- "$@"

# Copyright Â© 2018, Alexander Ben Nasrallah <me@abn.sh>
# Use of this source code is governed by a BSD 3-clause
# style license that can be found in the LICENSE file.

package require Tk
package require json

proc loadTrees {linkType} {
 	set input [open "|curl -s localhost:7070/elements/"]
	set jsonTree [read $input]
	if {[catch {close $input} errmsg]} {
		switch [lindex $::errorCode 2] {
			7 {log "unable to connect to server"}
			default { log $errmsg }
		}
		return {}
	}
	if {[catch {set trees [json::many-json2dict $jsonTree]} errmsg]} {
		puts asd
		log "server response is no valid json:\n$errmsg\n\n\n$jsonTree"
		return {}
	}
	set trees [lindex $trees 0]
	log "number of trees: [llength $trees]"
	return $trees
}

proc log {msg} {
	.c.log insert end "$msg\n"
}

proc treeview {path trees linkType} {
	ttk::treeview $path
	insertTreeItems $path {} $trees $linkType
	return $path
}

proc insertTreeItems {path parentId trees linkType} {
	foreach tree $trees {
		$path insert $parentId end -id [dict get $tree uuid] -text [dict get $tree title]
		if ![dict exists $tree $linkType] {
			continue
		}
		insertTreeItems $path [dict get $tree uuid] [dict get $tree $linkType] $linkType
	}
}

wm title . "Element Tree"
grid [ttk::frame .c -padding "3 3 12 12"] -column 0 -row 0 -sticky nwes
grid columnconfigure . 0 -weight 1; grid rowconfigure . 0 -weight 1

grid [tk::text .c.log -height 10] -column 0 -row 1 -sticky nwes
grid [treeview .c.tree [loadTrees "parentOf"] "parentOf"] -column 0 -row 0 -sticky nwes

grid columnconfigure .c 0 -weight 1
grid rowconfigure .c 0 -weight 1